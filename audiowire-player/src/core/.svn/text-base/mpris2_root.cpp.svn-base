/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -N -m -a core/mpris2_root -c Mpris2Root -i core/mpris2.h -l mpris::Mpris2 /home/mystte/rendu/AudioWire/audiowire/Perso/Player/src/dbus/org.mpris.MediaPlayer2.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "core/mpris2_root.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class Mpris2Root
 */

Mpris2Root::Mpris2Root(mpris::Mpris2 *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

Mpris2Root::~Mpris2Root()
{
    // destructor
}

bool Mpris2Root::canQuit() const
{
    // get the value of property CanQuit
    return qvariant_cast< bool >(parent()->property("CanQuit"));
}

bool Mpris2Root::canRaise() const
{
    // get the value of property CanRaise
    return qvariant_cast< bool >(parent()->property("CanRaise"));
}

bool Mpris2Root::canSetFullscreen() const
{
    // get the value of property CanSetFullscreen
    return qvariant_cast< bool >(parent()->property("CanSetFullscreen"));
}

QString Mpris2Root::desktopEntry() const
{
    // get the value of property DesktopEntry
    return qvariant_cast< QString >(parent()->property("DesktopEntry"));
}

bool Mpris2Root::fullscreen() const
{
    // get the value of property Fullscreen
    return qvariant_cast< bool >(parent()->property("Fullscreen"));
}

void Mpris2Root::setFullscreen(bool value)
{
    // set the value of property Fullscreen
    parent()->setProperty("Fullscreen", QVariant::fromValue(value));
}

bool Mpris2Root::hasTrackList() const
{
    // get the value of property HasTrackList
    return qvariant_cast< bool >(parent()->property("HasTrackList"));
}

QString Mpris2Root::identity() const
{
    // get the value of property Identity
    return qvariant_cast< QString >(parent()->property("Identity"));
}

QStringList Mpris2Root::supportedMimeTypes() const
{
    // get the value of property SupportedMimeTypes
    return qvariant_cast< QStringList >(parent()->property("SupportedMimeTypes"));
}

QStringList Mpris2Root::supportedUriSchemes() const
{
    // get the value of property SupportedUriSchemes
    return qvariant_cast< QStringList >(parent()->property("SupportedUriSchemes"));
}

void Mpris2Root::Quit()
{
    // handle method call org.mpris.MediaPlayer2.Quit
    parent()->Quit();
}

void Mpris2Root::Raise()
{
    // handle method call org.mpris.MediaPlayer2.Raise
    parent()->Raise();
}


#include "core/mpris2_root.moc"
