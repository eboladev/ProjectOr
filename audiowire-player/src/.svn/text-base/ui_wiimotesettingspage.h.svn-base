/********************************************************************************
** Form generated from reading UI file 'wiimotesettingspage.ui'
**
** Created: Wed Feb 20 06:22:05 2013
**      by: Qt User Interface Compiler version 4.8.1
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_WIIMOTESETTINGSPAGE_H
#define UI_WIIMOTESETTINGSPAGE_H

#include <QtCore/QVariant>
#include <QtGui/QAction>
#include <QtGui/QApplication>
#include <QtGui/QButtonGroup>
#include <QtGui/QCheckBox>
#include <QtGui/QFrame>
#include <QtGui/QHBoxLayout>
#include <QtGui/QHeaderView>
#include <QtGui/QLabel>
#include <QtGui/QPushButton>
#include <QtGui/QSpacerItem>
#include <QtGui/QSpinBox>
#include <QtGui/QTreeWidget>
#include <QtGui/QVBoxLayout>
#include <QtGui/QWidget>

QT_BEGIN_NAMESPACE

class Ui_WiimoteSettingsPage
{
public:
    QVBoxLayout *verticalLayout;
    QCheckBox *wiimotedev_enable;
    QLabel *label_2;
    QFrame *line;
    QWidget *widget;
    QVBoxLayout *verticalLayout_2;
    QCheckBox *wiimotedev_active;
    QCheckBox *wiimotedev_focus;
    QCheckBox *wiimotedev_notification;
    QHBoxLayout *horizontalLayout_2;
    QLabel *label;
    QSpinBox *wiimotedev_device;
    QTreeWidget *list;
    QHBoxLayout *horizontalLayout;
    QPushButton *wiimotedev_add_action;
    QPushButton *wiimotedev_delete_action;
    QPushButton *wiimotedev_reload;
    QSpacerItem *horizontalSpacer;

    void setupUi(QWidget *WiimoteSettingsPage)
    {
        if (WiimoteSettingsPage->objectName().isEmpty())
            WiimoteSettingsPage->setObjectName(QString::fromUtf8("WiimoteSettingsPage"));
        WiimoteSettingsPage->resize(507, 393);
        QIcon icon;
        icon.addFile(QString::fromUtf8(":/icon.png"), QSize(), QIcon::Normal, QIcon::Off);
        WiimoteSettingsPage->setWindowIcon(icon);
        verticalLayout = new QVBoxLayout(WiimoteSettingsPage);
        verticalLayout->setObjectName(QString::fromUtf8("verticalLayout"));
        wiimotedev_enable = new QCheckBox(WiimoteSettingsPage);
        wiimotedev_enable->setObjectName(QString::fromUtf8("wiimotedev_enable"));

        verticalLayout->addWidget(wiimotedev_enable);

        label_2 = new QLabel(WiimoteSettingsPage);
        label_2->setObjectName(QString::fromUtf8("label_2"));
        label_2->setWordWrap(true);
        label_2->setOpenExternalLinks(true);

        verticalLayout->addWidget(label_2);

        line = new QFrame(WiimoteSettingsPage);
        line->setObjectName(QString::fromUtf8("line"));
        line->setFrameShape(QFrame::HLine);
        line->setFrameShadow(QFrame::Sunken);

        verticalLayout->addWidget(line);

        widget = new QWidget(WiimoteSettingsPage);
        widget->setObjectName(QString::fromUtf8("widget"));
        widget->setEnabled(false);
        verticalLayout_2 = new QVBoxLayout(widget);
        verticalLayout_2->setContentsMargins(0, 0, 0, 0);
        verticalLayout_2->setObjectName(QString::fromUtf8("verticalLayout_2"));
        wiimotedev_active = new QCheckBox(widget);
        wiimotedev_active->setObjectName(QString::fromUtf8("wiimotedev_active"));
        wiimotedev_active->setChecked(true);

        verticalLayout_2->addWidget(wiimotedev_active);

        wiimotedev_focus = new QCheckBox(widget);
        wiimotedev_focus->setObjectName(QString::fromUtf8("wiimotedev_focus"));

        verticalLayout_2->addWidget(wiimotedev_focus);

        wiimotedev_notification = new QCheckBox(widget);
        wiimotedev_notification->setObjectName(QString::fromUtf8("wiimotedev_notification"));

        verticalLayout_2->addWidget(wiimotedev_notification);

        horizontalLayout_2 = new QHBoxLayout();
        horizontalLayout_2->setObjectName(QString::fromUtf8("horizontalLayout_2"));
        label = new QLabel(widget);
        label->setObjectName(QString::fromUtf8("label"));
        QSizePolicy sizePolicy(QSizePolicy::Maximum, QSizePolicy::Preferred);
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(label->sizePolicy().hasHeightForWidth());
        label->setSizePolicy(sizePolicy);

        horizontalLayout_2->addWidget(label);

        wiimotedev_device = new QSpinBox(widget);
        wiimotedev_device->setObjectName(QString::fromUtf8("wiimotedev_device"));
        wiimotedev_device->setMinimum(1);
        wiimotedev_device->setMaximum(999999999);

        horizontalLayout_2->addWidget(wiimotedev_device);


        verticalLayout_2->addLayout(horizontalLayout_2);

        list = new QTreeWidget(widget);
        list->setObjectName(QString::fromUtf8("list"));
        list->setEditTriggers(QAbstractItemView::NoEditTriggers);
        list->setAlternatingRowColors(true);
        list->setRootIsDecorated(false);
        list->setAllColumnsShowFocus(true);

        verticalLayout_2->addWidget(list);

        horizontalLayout = new QHBoxLayout();
        horizontalLayout->setSpacing(0);
        horizontalLayout->setObjectName(QString::fromUtf8("horizontalLayout"));
        horizontalLayout->setContentsMargins(-1, -1, -1, 0);
        wiimotedev_add_action = new QPushButton(widget);
        wiimotedev_add_action->setObjectName(QString::fromUtf8("wiimotedev_add_action"));
        QIcon icon1;
        icon1.addFile(QString::fromUtf8(":/icons/22x22/list-add.png"), QSize(), QIcon::Normal, QIcon::Off);
        wiimotedev_add_action->setIcon(icon1);

        horizontalLayout->addWidget(wiimotedev_add_action);

        wiimotedev_delete_action = new QPushButton(widget);
        wiimotedev_delete_action->setObjectName(QString::fromUtf8("wiimotedev_delete_action"));
        QIcon icon2;
        icon2.addFile(QString::fromUtf8(":/icons/22x22/list-remove.png"), QSize(), QIcon::Normal, QIcon::Off);
        wiimotedev_delete_action->setIcon(icon2);

        horizontalLayout->addWidget(wiimotedev_delete_action);

        wiimotedev_reload = new QPushButton(widget);
        wiimotedev_reload->setObjectName(QString::fromUtf8("wiimotedev_reload"));
        QIcon icon3;
        icon3.addFile(QString::fromUtf8(":/icons/22x22/view-refresh.png"), QSize(), QIcon::Normal, QIcon::Off);
        wiimotedev_reload->setIcon(icon3);

        horizontalLayout->addWidget(wiimotedev_reload);

        horizontalSpacer = new QSpacerItem(40, 20, QSizePolicy::Expanding, QSizePolicy::Minimum);

        horizontalLayout->addItem(horizontalSpacer);


        verticalLayout_2->addLayout(horizontalLayout);


        verticalLayout->addWidget(widget);


        retranslateUi(WiimoteSettingsPage);
        QObject::connect(wiimotedev_enable, SIGNAL(toggled(bool)), widget, SLOT(setEnabled(bool)));

        QMetaObject::connectSlotsByName(WiimoteSettingsPage);
    } // setupUi

    void retranslateUi(QWidget *WiimoteSettingsPage)
    {
        WiimoteSettingsPage->setWindowTitle(QApplication::translate("WiimoteSettingsPage", "Wiimotedev", 0, QApplication::UnicodeUTF8));
        wiimotedev_enable->setText(QApplication::translate("WiimoteSettingsPage", "Enable Wii Remote support", 0, QApplication::UnicodeUTF8));
        label_2->setText(QApplication::translate("WiimoteSettingsPage", "You can use your Wii Remote as a remote control for Clementine.  <a href=\"http://www.clementine-player.org/wiimote\">See the page on the Clementine wiki</a> for more information.\n"
"", 0, QApplication::UnicodeUTF8));
        wiimotedev_active->setText(QApplication::translate("WiimoteSettingsPage", "Connect Wii Remotes using active/deactive action", 0, QApplication::UnicodeUTF8));
        wiimotedev_focus->setText(QApplication::translate("WiimoteSettingsPage", "Enable shortcuts only when Clementine is focused", 0, QApplication::UnicodeUTF8));
        wiimotedev_notification->setText(QApplication::translate("WiimoteSettingsPage", "Use notifications to report Wii Remote status", 0, QApplication::UnicodeUTF8));
        label->setText(QApplication::translate("WiimoteSettingsPage", "Use Wii Remote", 0, QApplication::UnicodeUTF8));
        QTreeWidgetItem *___qtreewidgetitem = list->headerItem();
        ___qtreewidgetitem->setText(1, QApplication::translate("WiimoteSettingsPage", "Action", 0, QApplication::UnicodeUTF8));
        ___qtreewidgetitem->setText(0, QApplication::translate("WiimoteSettingsPage", "Buttons", 0, QApplication::UnicodeUTF8));
        wiimotedev_add_action->setText(QApplication::translate("WiimoteSettingsPage", "Add action", 0, QApplication::UnicodeUTF8));
        wiimotedev_delete_action->setText(QApplication::translate("WiimoteSettingsPage", "Remove action", 0, QApplication::UnicodeUTF8));
        wiimotedev_reload->setText(QApplication::translate("WiimoteSettingsPage", "Defaults", 0, QApplication::UnicodeUTF8));
    } // retranslateUi

};

namespace Ui {
    class WiimoteSettingsPage: public Ui_WiimoteSettingsPage {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_WIIMOTESETTINGSPAGE_H
